{"version":3,"sources":["components/NavBar.jsx","components/Cards/Card.jsx","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/Charts/Charts.jsx","components/Footer.jsx","App.js","context.js","index.js","assets/logo.png"],"names":["NavBar","className","href","src","logo","alt","Card","cards","name","text","cases","lastUpdate","toLowerCase","start","end","duration","separator","Date","toDateString","Cards","props","data","cardItems","recovered","value","confirmed","deaths","map","card","index","key","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","CountryPicker","useState","setData","useEffect","res","getData","fetchedCountries","onChange","e","handleCountryChange","target","i","Charts","linechart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","Footer","getFullYear","App","setCountry","loading","setLoading","fetchedData","Fragment","CoronaContext","React","createContext","CoronaProvider","children","Provider","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9dda5b19.chunk.js","sourcesContent":["import React from 'react'\r\nimport logo from '../assets/logo.png'\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className='navbar navbar-light bg-light'>\r\n      <div className='container'>\r\n        <a className='navbar-brand' href='/'>\r\n          <img src={logo} alt='Corona Logo' />\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport Countup from 'react-countup'\r\n\r\nconst Card = ({ cards: { name, text, cases, lastUpdate } }) => {\r\n  return (\r\n    <div className='col-md-4'>\r\n      <div className={'card mb-3 box-' + name.toLowerCase()}>\r\n        <div className='card-body'>\r\n          <h4 className='card-title'>\r\n            <Countup start={0} end={cases} duration={2.5} separator=',' />\r\n          </h4>\r\n          <p className='card-text text-secondary m-0'>\r\n            {new Date(lastUpdate).toDateString()}\r\n          </p>\r\n          <p className='card-text'>{text}</p>\r\n        </div>\r\n        <div className='card-header bg-info text-white'>{name}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst Cards = (props) => {\r\n  const { lastUpdate } = props.data\r\n  const cardItems = [\r\n    {\r\n      name: 'Infected',\r\n      text: 'Number of active cases of COVID-19',\r\n      cases: props.data.recovered.value,\r\n    },\r\n    {\r\n      name: 'Recovered',\r\n      text: 'Number of active cases of COVID-19',\r\n      cases: props.data.confirmed.value,\r\n    },\r\n    {\r\n      name: 'Deaths',\r\n      text: 'Number of active cases of COVID-19',\r\n      cases: props.data.deaths.value,\r\n    },\r\n  ]\r\n  return (\r\n    <div className='container my-5'>\r\n      <div className='row'>\r\n        {cardItems.map((card, index) => (\r\n          <Card cards={{ ...card, lastUpdate }} key={index} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards\r\n","import axios from \"axios\";\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) changeableUrl = `${url}/countries/${country}`;\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n    return { confirmed, recovered, deaths, lastUpdate }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map(dailyData => (\r\n      {\r\n        confirmed: dailyData.confirmed.total,\r\n        deaths: dailyData.deaths.total,\r\n        date: dailyData.reportDate,\r\n      }\r\n    ));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n    return countries.map(country => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { fetchCountries } from '../../api'\r\n\r\nconst CountryPicker = (props) => {\r\n  const [data, setData] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const res = await fetchCountries()\r\n      if (res) setData(res)\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  const fetchedCountries = data\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        <div className='col-md-6 m-auto'>\r\n          <select\r\n            className='form-control'\r\n            onChange={(e) => props.handleCountryChange(e.target.value)}\r\n          >\r\n            <option value=''>Global</option>\r\n            {fetchedCountries.map((country, i) => {\r\n              return (\r\n                <option key={i} value={country}>\r\n                  {country}\r\n                </option>\r\n              )\r\n            })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CountryPicker\r\n","import React, { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from '../../api'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\n\r\nconst Charts = (props) => {\r\n  const [data, setData] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const res = await fetchDailyData()\r\n      if (res) setData(res)\r\n    }\r\n\r\n    getData()\r\n  }, [])\r\n\r\n  const dailyData = data\r\n  const linechart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null\r\n\r\n  const {\r\n    data: { confirmed, recovered, deaths },\r\n    country,\r\n  } = props\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets: [\r\n          {\r\n            label: 'People',\r\n            backgroundColor: [\r\n              'rgba(0, 0, 255, 0.5)',\r\n              'rgba(0, 255, 0, 0.5)',\r\n              'rgba(255, 0, 0, 0.5)',\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Curent state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null\r\n\r\n  return (\r\n    <div className='container mt-5 pb-5'>\r\n      <div className='row'>\r\n        <div className='col-md-8 m-auto'>{country ? barChart : linechart}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className='footer-copyright py-3 text-center'>\r\n        <div className='container-fluid'>\r\n          © {new Date().getFullYear()} Copyright:{' '}\r\n          <a href='https://www.fb.com/aashishmaharjan.2001'>Aashish Maharjan</a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport NavBar from './components/NavBar'\r\nimport Cards from './components/Cards/Cards'\r\nimport CountryPicker from './components/CountryPicker/CountryPicker'\r\nimport Charts from './components/Charts/Charts'\r\nimport Footer from './components/Footer'\r\nimport { fetchData } from './api'\r\nimport Particles from 'react-particles-js'\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState({})\r\n  const [country, setCountry] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const res = await fetchData()\r\n      if (res) {\r\n        setData(res)\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    getData()\r\n  }, [])\r\n\r\n  const handleCountryChange = async (country) => {\r\n    setLoading(true)\r\n    const fetchedData = await fetchData(country)\r\n    if (fetchedData) {\r\n      setData(fetchedData)\r\n      setCountry(country)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    !loading && (\r\n      <React.Fragment>\r\n        <NavBar />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={handleCountryChange} />\r\n        <Charts data={data} country={country} />\r\n        <Particles className='effects' />\r\n        <Footer />\r\n      </React.Fragment>\r\n    )\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nconst CoronaContext = React.createContext()\r\nconst CoronaProvider = ({ children }) => {\r\n  return (\r\n    <CoronaContext.Provider value='hello'>{children}</CoronaContext.Provider>\r\n  )\r\n}\r\n\r\nexport { CoronaProvider, CoronaContext }\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { CoronaProvider } from './context'\r\n\r\nReactDOM.render(\r\n  <CoronaProvider>\r\n    <App />\r\n  </CoronaProvider>,\r\n  document.getElementById('root')\r\n)\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.d7265326.png\";"],"sourceRoot":""}