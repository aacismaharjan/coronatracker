{"version":3,"sources":["components/NavBar.jsx","components/Loading.jsx","components/Cards/Card.jsx","context.js","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","components/Charts/Charts.jsx","components/Footer.jsx","App.js","index.js","assets/logo.png"],"names":["NavBar","className","href","src","logo","alt","Loading","role","Card","cards","name","text","cases","lastUpdate","toLowerCase","start","end","duration","separator","Date","toDateString","CoronaContext","React","createContext","CoronaProvider","children","url","useState","caseData","setCaseData","caseDailyData","setCaseDailyData","country","setCountry","countries","setCountries","useEffect","fetch","then","res","json","data","item","map","dailyData","confirmed","total","deaths","date","reportDate","catch","changeableUrl","handleCountryChange","a","Provider","value","Cards","useContext","recovered","cardItems","cardsContainer","card","index","key","length","CountryPicker","onChange","e","target","i","Charts","linechart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","Footer","getFullYear","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c28f033e.chunk.js","sourcesContent":["import React from 'react'\r\nimport logo from '../assets/logo.png'\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className='navbar navbar-light bg-light'>\r\n      <div className='container'>\r\n        <a className='navbar-brand' href='/'>\r\n          <img src={logo} alt='Corona Logo' />\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className='d-flex justify-content-center align-center w-100'>\r\n      <div className='spinner-border text-secondary m-5' role='status'>\r\n        <span className='sr-only'>Loading...</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\nimport Countup from 'react-countup'\r\n\r\nconst Card = ({ cards: { name, text, cases, lastUpdate } }) => {\r\n  return (\r\n    <div className='col-md-4'>\r\n      <div className={'card mb-3 box-' + name.toLowerCase()}>\r\n        <div className='card-body'>\r\n          <h4 className='card-title'>\r\n            <Countup start={0} end={cases} duration={2.5} separator=',' />\r\n          </h4>\r\n          <p className='card-text text-secondary m-0'>\r\n            {new Date(lastUpdate).toDateString()}\r\n          </p>\r\n          <p className='card-text'>{text}</p>\r\n        </div>\r\n        <div className='card-header bg-info text-white'>{name}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst CoronaContext = React.createContext()\r\nconst CoronaProvider = ({ children }) => {\r\n  const url = 'https://covid19.mathdro.id/api'\r\n  const [caseData, setCaseData] = useState([])\r\n  const [caseDailyData, setCaseDailyData] = useState([])\r\n  const [country, setCountry] = useState(null)\r\n  const [countries, setCountries] = useState([])\r\n\r\n  // Only fetch once\r\n  useEffect(() => {\r\n    // Fetch Countries List\r\n    const getCountriesList = () => {\r\n      fetch(url + '/countries')\r\n        .then((res) => res.json())\r\n        .then(({ countries }) => {\r\n          setCountries(countries.map((country) => country.name))\r\n        })\r\n        .catch(() => setCountries())\r\n    }\r\n\r\n    // Fetch Daily Summary\r\n    const getDailyData = () => {\r\n      fetch(url + '/daily')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          const item = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n          }))\r\n          setCaseDailyData(item)\r\n        })\r\n        .catch(() => setCaseDailyData([]))\r\n    }\r\n\r\n    getDailyData()\r\n    getCountriesList()\r\n  }, [])\r\n\r\n  // Fetch Cases, Recoveries, Deaths\r\n  useEffect(() => {\r\n    let changeableUrl = url\r\n    const getData = () => {\r\n      if (country) changeableUrl = url + '/countries/' + country\r\n      fetch(changeableUrl)\r\n        .then((res) => res.json())\r\n        .then((item) => setCaseData(item))\r\n        .catch(() => setCaseData([]))\r\n    }\r\n    getData(country)\r\n  }, [country])\r\n\r\n  // Fetch specific country data\r\n  const handleCountryChange = async (country) => {\r\n    setCountry(country)\r\n  }\r\n\r\n  return (\r\n    <CoronaContext.Provider\r\n      value={{\r\n        caseData,\r\n        handleCountryChange,\r\n        country,\r\n        caseDailyData,\r\n        countries,\r\n      }}\r\n    >\r\n      {children}\r\n    </CoronaContext.Provider>\r\n  )\r\n}\r\n\r\nexport { CoronaProvider, CoronaContext }\r\n","import React from 'react'\r\nimport Card from './Card'\r\nimport Loading from '../Loading'\r\nimport { useContext } from 'react'\r\nimport { CoronaContext } from '../../context'\r\n\r\nconst Cards = () => {\r\n  const { caseData } = useContext(CoronaContext)\r\n  const { lastUpdate, recovered, confirmed, deaths } = caseData\r\n\r\n  const cardItems = confirmed\r\n    ? [\r\n        {\r\n          name: 'Infected',\r\n          text: 'Number of active cases of COVID-19',\r\n          cases: recovered.value,\r\n        },\r\n        {\r\n          name: 'Recovered',\r\n          text: 'Number of active cases of COVID-19',\r\n          cases: confirmed.value,\r\n        },\r\n        {\r\n          name: 'Deaths',\r\n          text: 'Number of active cases of COVID-19',\r\n          cases: deaths.value,\r\n        },\r\n      ]\r\n    : []\r\n\r\n  const cardsContainer = cardItems.map((card, index) => (\r\n    <Card cards={{ ...card, lastUpdate }} key={index} />\r\n  ))\r\n\r\n  return (\r\n    <div className='container my-5'>\r\n      <div className='row'>\r\n        {cardItems.length ? cardsContainer : <Loading />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards\r\n","import React from 'react'\r\nimport { useContext } from 'react'\r\nimport { CoronaContext } from '../../context'\r\n\r\nconst CountryPicker = () => {\r\n  const { handleCountryChange, countries } = useContext(CoronaContext)\r\n\r\n  function handleChange(e) {\r\n    handleCountryChange(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        <div className='col-md-6 m-auto'>\r\n          <select className='form-control' onChange={handleChange}>\r\n            <option value=''>Global</option>\r\n            {countries.length &&\r\n              countries.map((country, i) => {\r\n                return (\r\n                  <option key={i} value={country}>\r\n                    {country}\r\n                  </option>\r\n                )\r\n              })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CountryPicker\r\n","import React, { useContext } from 'react'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport { CoronaContext } from '../../context'\r\n\r\nconst Charts = () => {\r\n  const { caseData, country, caseDailyData } = useContext(CoronaContext)\r\n  const { confirmed, recovered, deaths } = caseData\r\n  const dailyData = caseDailyData\r\n\r\n  const linechart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets: [\r\n          {\r\n            label: 'People',\r\n            backgroundColor: [\r\n              'rgba(0, 0, 255, 0.5)',\r\n              'rgba(0, 255, 0, 0.5)',\r\n              'rgba(255, 0, 0, 0.5)',\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Curent state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null\r\n\r\n  return (\r\n    <div className='container mt-5 pb-5'>\r\n      <div className='row'>\r\n        <div className='col-md-8 m-auto'>{country ? barChart : linechart}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className='footer-copyright py-3 text-center'>\r\n        <div className='container-fluid'>\r\n          © {new Date().getFullYear()} Copyright:{' '}\r\n          <a href='https://www.fb.com/aashishmaharjan.2001'>Aashish Maharjan</a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport './App.css'\r\nimport { NavBar, Cards, CountryPicker, Charts, Footer } from './components'\r\n\r\nexport const App = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Cards />\r\n      <CountryPicker />\r\n      <Charts />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { CoronaProvider } from './context'\r\n\r\nReactDOM.render(\r\n  <CoronaProvider>\r\n    <App />\r\n  </CoronaProvider>,\r\n  document.getElementById('root')\r\n)\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.d7265326.png\";"],"sourceRoot":""}