{"version":3,"sources":["assets/logo.png","components/NavBar.jsx","components/Cards/Card.jsx","components/Loading.jsx","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/Charts/Charts.jsx","components/Footer.jsx","App.js","index.js"],"names":["module","exports","NavBar","state","className","href","src","logo","alt","Component","Card","this","props","cards","name","toLowerCase","start","end","numbers","duration","separator","Date","lastUpdate","toDateString","text","Loading","role","Cards","data","confirmed","recovered","deaths","value","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","CountryPicker","fetchedCountries","setState","onChange","e","handleCountryChange","target","i","key","Charts","fetchedDailyData","linechart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","Footer","getFullYear","App","fetchedData","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbc2d0a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d7265326.png\";","import React, { Component } from 'react';\r\nimport logo from \"../assets/logo.png\"\r\n\r\nclass NavBar extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"index.html\"><img src={logo} alt=\"\" /></a>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport Countup from 'react-countup';\r\n\r\nclass Card extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-4\">\r\n        <div className={`card mb-3 box-${this.props.cards.name.toLowerCase()}`}>\r\n          <div className=\"card-body\">\r\n            <h4 className=\"card-title\">\r\n              <Countup start={0} end={this.props.numbers} duration={2.5} separator=\",\"></Countup>\r\n            </h4>\r\n            <p className=\"card-text text-secondary m-0\">{new Date(this.props.lastUpdate).toDateString()}</p>\r\n            <p className=\"card-text\">{this.props.cards.text}</p>\r\n          </div>\r\n          <div className=\"card-header bg-info text-white\">{this.props.cards.name}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\n\r\nclass Loading extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-center\">\r\n        <div className=\"spinner-border text-secondary m-5\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </div> <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport Card from \"./Card\";\r\nimport Loading from \"../Loading\"\r\n\r\nclass Cards extends Component {\r\n  state = {\r\n    cards: [\r\n      {\r\n        name: \"Infected\",\r\n        text: \"Number of active cases of COVID-19\",\r\n      },\r\n      {\r\n        name: \"Recovered\",\r\n        text: \"Number of active cases of COVID-19\",\r\n      },\r\n      {\r\n        name: \"Deaths\",\r\n        text: \"Number of active cases of COVID-19\",\r\n      }\r\n    ]\r\n  };\r\n\r\n  render() {\r\n    const { confirmed, recovered, deaths, lastUpdate } = this.props.data;\r\n    if (!confirmed) return <Loading />;\r\n\r\n    return (\r\n      <div className=\"container my-5\">\r\n        <div className=\"row\">\r\n          <Card cards={this.state.cards[0]} numbers={confirmed.value} lastUpdate={lastUpdate} />\r\n          <Card cards={this.state.cards[1]} numbers={recovered.value} lastUpdate={lastUpdate} />\r\n          <Card cards={this.state.cards[2]} numbers={deaths.value} lastUpdate={lastUpdate} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;","import axios from \"axios\";\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) changeableUrl = `${url}/countries/${country}`;\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n    return { confirmed, recovered, deaths, lastUpdate }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map(dailyData => (\r\n      {\r\n        confirmed: dailyData.confirmed.total,\r\n        deaths: dailyData.deaths.total,\r\n        date: dailyData.reportDate,\r\n      }\r\n    ));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n    return countries.map(country => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nclass CountryPicker extends Component {\r\n  state = {\r\n    data: [],\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedCountries = await fetchCountries();\r\n    this.setState({ data: fetchedCountries });\r\n  }\r\n\r\n  render() {\r\n    const fetchedCountries = this.state.data;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 m-auto\">\r\n            <select className=\"form-control\" onChange={(e) => this.props.handleCountryChange(e.target.value)}>\r\n              <option value=\"\">Global</option>\r\n              {fetchedCountries.map((country, i) => {\r\n                return <option key={i} value={country}>{country}</option>\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountryPicker;","import React, { Component } from 'react';\r\nimport { fetchDailyData } from \"../../api\"\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nclass Charts extends Component {\r\n  state = {\r\n    data: [{}],\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedDailyData = await fetchDailyData();\r\n    this.setState({ data: fetchedDailyData });\r\n  }\r\n\r\n  render() {\r\n    const dailyData = this.state.data;\r\n    const linechart = dailyData.length ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [\r\n            {\r\n              data: dailyData.map(({ confirmed }) => confirmed),\r\n              label: \"Infected\",\r\n              borderColor: \"#3333ff\",\r\n              fill: true,\r\n            },\r\n            {\r\n              data: dailyData.map(({ deaths }) => deaths),\r\n              label: \"Deaths\",\r\n              borderColor: \"red\",\r\n              backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n              fill: true,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null;\r\n\r\n    const { data: { confirmed, recovered, deaths }, country } = this.props;\r\n    const barChart = confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n          datasets: [\r\n            {\r\n              label: \"People\",\r\n              backgroundColor: [\r\n                \"rgba(0, 0, 255, 0.5)\",\r\n                \"rgba(0, 255, 0, 0.5)\",\r\n                \"rgba(255, 0, 0, 0.5)\",\r\n              ],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Curent state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null;\r\n\r\n    return (\r\n      <div className=\"container mt-5 pb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 m-auto\">\r\n            {country ? barChart : linechart}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Charts;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <div className=\"footer-copyright py-3 text-center\">\r\n          <div className=\"container-fluid\">\r\n            © {new Date().getFullYear()} Copyright: <a href=\"https://www.fb.com/aashishmaharjan.2001\"> Aashish Maharjan </a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './App.css'\r\nimport NavBar from \"./components/NavBar\"\r\nimport Cards from \"./components/Cards/Cards\"\r\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\"\r\nimport Charts from \"./components/Charts/Charts\"\r\nimport Footer from \"./components/Footer\"\r\nimport { fetchData } from \"./api\"\r\nimport Particles from \"react-particles-js\"\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Charts data={data} country={country} />\r\n        <Particles className=\"effects\" />\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}